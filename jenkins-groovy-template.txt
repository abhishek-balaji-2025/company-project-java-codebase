pipeline {
    agent any   // Run on any available agent/node

    environment {
        // Define environment variables here (optional)
        DOCKERHUB_CREDENTIALS = 'dockerhub-creds'  // example
    }

    options {
        // Pipeline-level options (optional)
        timeout(time: 30, unit: 'MINUTES')
        retry(2)
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your Git repo
                git branch: 'main', url: 'https://github.com/your-username/your-repo.git'
            }
        }

        stage('Build') {
            steps {
                // Run Maven clean package
                sh 'mvn clean package'
            }
        }

        stage('Docker Build') {
            steps {
                sh 'docker build -t your-dockerhub-username/sampleapp:latest .'
            }
        }

        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${env.DOCKERHUB_CREDENTIALS}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                }
            }
        }

        stage('Docker Push') {
            steps {
                sh 'docker push your-dockerhub-username/sampleapp:latest'
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace'
            cleanWs()
        }
        success {
            echo 'Build completed successfully!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
